#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;

const int N=100010,INF=0x3f3f3f3f;

//f[i][0]-代表之前有买，即手上有股票
//f[i][1]-代表之前一天卖掉了，手上没有股票，处于冷冻期（没有股票的第1天）
//f[i][2]-代表之前没有买，手上没有股票，也有可能是刚解除冷冻期（没有股票的第>=2天）

int f[N][3];//维护第i天手上股票的三种情况 
int w[N];//维护第i天的股票价格（权值） 
int n;

int main()
{
    cin>>n;
    for(int i=1;i<=n;i++)cin>>w[i];
    
    //状态初始化
    memset(f,-0x3f,sizeof f);//所有状态初始化成不合法，即这些情况刚开始都不存在
    f[0][1]=f[0][2]=0;//该开始手上没有股票都是合法的，即这种情况是存在的
    
    for(int i=1;i<=n;i++)//遍历每一天 
    {
        f[i][0]=max(f[i-1][0],f[i-1][2]-w[i]);//之前有股票、也有可能冷冻期是刚买的
        f[i][1]=f[i-1][0]+w[i];//之前有股票，卖掉，然后进入冷冻期（没有股票的第1天）
        f[i][2]=max(f[i-1][2],f[i-1][1]);//之前没有股票、也有可能是刚解除冷冻期（没有股票的第>=2天）
    }
    
    cout<<max(f[n][1],f[n][2]);//没有股票都算是合法的结果，可能刚卖掉、也有可能卖掉很久了
    return 0;
}
